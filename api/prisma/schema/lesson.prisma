model Lesson {
  id        Int @id @default(autoincrement())
  dayOfWeek Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Foreign keys - all dependencies are on primary key
  idTeacher Int     @map("id_teacher")
  teacher   Teacher @relation(fields: [idTeacher], references: [id], onDelete: Cascade)

  idClass Int   @map("id_class")
  class   Class @relation(fields: [idClass], references: [id], onDelete: Cascade)

  idSubject Int     @map("id_subject")
  subject   Subject @relation(fields: [idSubject], references: [id], onDelete: Cascade)

  idClassroom Int       @map("id_classroom")
  classroom   Classroom @relation(fields: [idClassroom], references: [id], onDelete: Cascade)

  idLessonSchedule Int            @map("id_lessonSchedule")
  lessonSchedule   LessonSchedule @relation(fields: [idLessonSchedule], references: [id], onDelete: Cascade)

  idScheduleVersion Int             @map("id_scheduleVersion")
  scheduleVersion   ScheduleVersion @relation(fields: [idScheduleVersion], references: [id], onDelete: Cascade)

  // Optional group reference (lesson for subgroup of the class)
  idClassGroup Int?        @map("id_classGroup")
  classGroup   ClassGroup? @relation(fields: [idClassGroup], references: [id], onDelete: SetNull)

  // Relations
  substitutions     Substitution[]

  @@unique([idTeacher, idClass, idSubject, idClassroom, idScheduleVersion, idClassGroup])
}
