version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: edu-flow-postgres
    environment:
      POSTGRES_DB: edu_flow
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Server
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: edu-flow-api
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/edu_flow
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./api:/app
      - /app/node_modules
    command: sh -c "pnpm install && pnpm db:generate && pnpm start"

  # Frontend
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: edu-flow-ui
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "3000:80"
    depends_on:
      - api
    volumes:
      - ./ui:/app
      - /app/node_modules

volumes:
  postgres_data:
